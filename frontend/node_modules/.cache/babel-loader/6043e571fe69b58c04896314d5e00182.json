{"ast":null,"code":"var _jsxFileName = \"/Users/mfischer/Desktop/Heise Test/heise/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [albumData, setAlbumData] = useState([]);\n  const [editAlbum, setEditAlbum] = useState(null);\n  const [editTitleText, setEditTitleText] = useState('');\n  const [editArtistText, setEditArtistText] = useState('');\n  const [editReleasedYearNumber, setEditRelasedYearNumber] = useState('');\n  const baseURL = 'https://hk-test-api.herokuapp.com/albums/';\n  const contentType = 'application/json'; // Delete album data from database\n\n  const deleteAlbumData = id => {\n    axios.delete(`${baseURL}${id}`, {\n      headers: {\n        'X-API-Key': process.env.REACT_APP_API_KEY\n      }\n    }); // Display only the new album data\n\n    const newAlbumData = albumData.filter(album => album.id !== id);\n    setAlbumData(newAlbumData);\n  }; // Fetch album data from database\n\n\n  const fetchAlbumData = () => {\n    return axios.get(`localhost:5000`).then(response => {\n      return response.data;\n    }).catch(e => {\n      console.log('error:', e);\n    });\n  }; // Fetch album data only at initial rendering\n\n\n  useEffect(() => {\n    fetchAlbumData().then(albums => {\n      setAlbumData(albums);\n    });\n  }, []);\n  const editedAlbumData = {\n    'title': `${editTitleText}`,\n    'artist': `${editArtistText}`,\n    'released_in': editReleasedYearNumber\n  }; // Put edited album data to database\n\n  const editAlbumData = id => {\n    axios.put(`${baseURL}${id}`, editedAlbumData, {\n      headers: {\n        'Content-Type': contentType,\n        'X-API-Key': process.env.REACT_APP_API_KEY\n      }\n    }); // Display the new album Data\n\n    const updatedAlbum = [...albumData].map(album => {\n      if (album.id === id) {\n        album.title = editTitleText;\n        album.artist = editArtistText;\n        album.released_in = editReleasedYearNumber;\n      }\n\n      return album;\n    }); // Set album Data to zero for next call \n\n    setAlbumData(updatedAlbum);\n    setEditTitleText('');\n    setEditArtistText('');\n    setEditRelasedYearNumber();\n    setEditAlbum(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: albumData.map(album => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group-item list-group-item-action flex-column align-items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex w-100 justify-content-between\",\n            children: [editAlbum === album.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Titel:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-group-text mb-2\",\n                type: \"text\",\n                onChange: e => setEditTitleText(e.target.value),\n                value: editTitleText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 42\n            }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-1\",\n              children: [\"Titel: \", album.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [editAlbum === album.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary\",\n                onClick: () => editAlbumData(album.id),\n                children: \"Speichern\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 44\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary\",\n                onClick: () => setEditAlbum(album.id),\n                children: \"Bearbeiten\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 153\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary\",\n                onClick: () => {\n                  deleteAlbumData(album.id);\n                },\n                children: \"L\\xF6schen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), editAlbum === album.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"K\\xFCnstler:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-group-text mb-2\",\n              type: \"text\",\n              onChange: e => setEditArtistText(e.target.value),\n              value: editArtistText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-1\",\n            children: [\"K\\xFCnstler: \", album.artist]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 24\n          }, this), editAlbum === album.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Erscheinungsjahr:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-group-text\",\n              type: \"number\",\n              onChange: e => setEditRelasedYearNumber(e.target.value),\n              defaultValue: editReleasedYearNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"mb-1\",\n            children: [\"Erscheinungjahr: \", album.released_in]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 24\n          }, this)]\n        }, album.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"y/Gq65W5lC0LzTq5KkHGseDXYgY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mfischer/Desktop/Heise Test/heise/frontend/src/App.js"],"names":["React","useState","useEffect","axios","App","albumData","setAlbumData","editAlbum","setEditAlbum","editTitleText","setEditTitleText","editArtistText","setEditArtistText","editReleasedYearNumber","setEditRelasedYearNumber","baseURL","contentType","deleteAlbumData","id","delete","headers","process","env","REACT_APP_API_KEY","newAlbumData","filter","album","fetchAlbumData","get","then","response","data","catch","e","console","log","albums","editedAlbumData","editAlbumData","put","updatedAlbum","map","title","artist","released_in","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst App = () => {\n  const [albumData, setAlbumData] = useState([])\n  const [editAlbum, setEditAlbum] = useState(null)\n  const [editTitleText, setEditTitleText] = useState('')\n  const [editArtistText, setEditArtistText] = useState('')\n  const [editReleasedYearNumber, setEditRelasedYearNumber] = useState('')\n  const baseURL = 'https://hk-test-api.herokuapp.com/albums/'\n  const contentType = 'application/json'\n\n  // Delete album data from database\n  const deleteAlbumData = id => {\n    axios.delete(`${baseURL}${id}`, {\n      headers: {\n        'X-API-Key': process.env.REACT_APP_API_KEY\n      }\n    })\n    // Display only the new album data\n    const newAlbumData = albumData.filter(album => album.id !== id)\n    setAlbumData(newAlbumData)\n  }\n\n  // Fetch album data from database\n  const fetchAlbumData = () => {\n    return axios.get(`localhost:5000`)\n      .then((response) => {\n        return response.data\n      })\n      .catch(e => {\n        console.log('error:', e)\n      });\n  }\n\n  // Fetch album data only at initial rendering\n  useEffect(() => {\n    fetchAlbumData().then(albums => {\n      setAlbumData(albums)\n    })\n  }, [])\n\n  const editedAlbumData = {\n    'title': `${editTitleText}`,\n    'artist': `${editArtistText}`,\n    'released_in': editReleasedYearNumber\n  }\n\n  // Put edited album data to database\n  const editAlbumData = id => {\n    axios.put(`${baseURL}${id}`, editedAlbumData, {\n      headers: {\n        'Content-Type': contentType,\n        'X-API-Key': process.env.REACT_APP_API_KEY\n      }\n    })\n    // Display the new album Data\n    const updatedAlbum = [...albumData].map((album) => {\n      if (album.id === id) {\n        album.title = editTitleText\n        album.artist = editArtistText\n        album.released_in = editReleasedYearNumber\n      }\n      return album\n    })\n    // Set album Data to zero for next call \n    setAlbumData(updatedAlbum)\n    setEditTitleText('')\n    setEditArtistText('')\n    setEditRelasedYearNumber()\n    setEditAlbum(null)\n  }\n\n  return (\n    <div>\n      <div className='app'>\n        {albumData.map(album => {\n          return <div key={album.id} className='list-group-item list-group-item-action flex-column align-items-start'>\n            <div className='d-flex w-100 justify-content-between'>\n              {editAlbum === album.id ? (<div>\n                <h5>Titel:</h5>\n                <input className='input-group-text mb-2' type='text' onChange={e => setEditTitleText(e.target.value)} value={editTitleText} />\n              </div>) : (<h5 className='mb-1'>Titel: {album.title}</h5>)}\n              <small>\n                {editAlbum === album.id ? (<button className='btn btn-outline-secondary' onClick={() => editAlbumData(album.id)}>Speichern</button>) : (<button className='btn btn-outline-secondary' onClick={() => setEditAlbum(album.id)}>Bearbeiten</button>)}\n                <button className='btn btn-outline-secondary' onClick={() => { deleteAlbumData(album.id) }}>Löschen</button>\n              </small>\n            </div>\n            {editAlbum === album.id ? (<div>\n              <h5>Künstler:</h5>\n              <input className='input-group-text mb-2' type='text' onChange={e => setEditArtistText(e.target.value)} value={editArtistText} />\n            </div>) : (<h5 className='mb-1'>Künstler: {album.artist}</h5>)}\n            {editAlbum === album.id ? (<div>\n              <h5>Erscheinungsjahr:</h5>\n              <input className='input-group-text' type='number' onChange={e => setEditRelasedYearNumber(e.target.value)} defaultValue={editReleasedYearNumber} />\n            </div>) : (<small className='mb-1'>Erscheinungjahr: {album.released_in}</small>)}\n          </div>\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}